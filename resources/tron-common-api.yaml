openapi: 3.0.1
info:
  title: TRON Common API
  version: 0.0.1
servers:
- url: "http://localhost:8088/api"
  description: Generated server url
paths:
  /v1/scratch/users/{id}:
    put:
      tags:
      - scratch-storage-controller
      summary: Edits an existing Scratch Space user information
      description: Requester has to have DASHBOARD_ADMIN rights
      operationId: editScratchUser
      parameters:
      - name: id
        in: path
        description: Scratch User Id
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ScratchStorageUser"
        required: true
      responses:
        "409":
          description: Scratch User Email Address is already is use
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResourceAlreadyExistsException"
        "200":
          description: Operation Successful
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ScratchStorageUser"
        "400":
          description: Malformed Scratch Storage object or malformed user UUID
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/BadRequestException"
        "403":
          description: No DASHBOARD_ADMIN privileges
          content:
            '*/*':
              schema:
                type: object
        "404":
          description: User id not found
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/RecordNotFoundException"
    delete:
      tags:
      - scratch-storage-controller
      summary: Deletes a scratch user
      description: Requester has to have DASHBOARD_ADMIN rights
      operationId: deleteScratchUser
      parameters:
      - name: id
        in: path
        description: Scratch User Id
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: Operation Successful
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ScratchStorageUser"
        "403":
          description: No DASHBOARD_ADMIN privileges
          content:
            '*/*':
              schema:
                type: object
        "400":
          description: Malformed user UUID
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/BadRequestException"
        "404":
          description: User id not found
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/RecordNotFoundException"
  /v1/scratch/apps/{id}:
    put:
      tags:
      - scratch-storage-controller
      summary: Edit existing scratch space app information (its name)
      description: Requester has to have DASHBOARD_ADMIN rights
      operationId: editExistingAppEntry
      parameters:
      - name: id
        in: path
        description: Application UUID
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ScratchStorageAppRegistryEntry"
        required: true
      responses:
        "404":
          description: Application ID not found
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/RecordNotFoundException"
        "403":
          description: No DASHBOARD_ADMIN privileges
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: App Name is already is use
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResourceAlreadyExistsException"
        "400":
          description: Malformed request body / app name already exists or appId is
            malformed
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/BadRequestException"
        "200":
          description: App Info Changed OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ScratchStorageAppRegistryEntry"
    delete:
      tags:
      - scratch-storage-controller
      summary: Deletes this application from the Common API registry (removes from
        scratch space use)
      description: Requester has to have DASHBOARD_ADMIN rights
      operationId: deleteExistingAppEntry
      parameters:
      - name: id
        in: path
        description: Application UUID
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "404":
          description: Application ID not found
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/RecordNotFoundException"
        "403":
          description: No DASHBOARD_ADMIN privileges
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: App Removed OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ScratchStorageAppRegistryEntry"
        "400":
          description: AppId is malformed
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/BadRequestException"
  /v1/person/{id}:
    get:
      tags:
      - person-controller
      summary: Retrieves a person by ID
      description: Retrieves a person by ID
      operationId: getPerson
      parameters:
      - name: id
        in: path
        description: Person ID to retrieve
        required: true
        schema:
          type: string
          format: uuid
      - name: memberships
        in: query
        description: Whether to include this person's organization memberships in
          the response
        required: false
        schema:
          type: boolean
      - name: leaderships
        in: query
        description: Whether to include the organization ids this person is the leader
          of in the response
        required: false
        schema:
          type: boolean
      responses:
        "200":
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PersonDto"
        "400":
          description: Bad request
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
        "404":
          description: Resource not found
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
    put:
      tags:
      - person-controller
      summary: Updates an existing person
      description: Updates an existing person
      operationId: updatePerson
      parameters:
      - name: id
        in: path
        description: Person ID to update
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              description: Updated person
              oneOf:
              - $ref: "#/components/schemas/PersonDto"
              - $ref: "#/components/schemas/Airman"
              - $ref: "#/components/schemas/CoastGuardsman"
              - $ref: "#/components/schemas/Marine"
              - $ref: "#/components/schemas/Sailor"
              - $ref: "#/components/schemas/Soldier"
              - $ref: "#/components/schemas/Spaceman"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PersonDto"
        "404":
          description: Resource not found
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
    delete:
      tags:
      - person-controller
      summary: Deletes an existing person
      description: Deletes an existing person
      operationId: deletePerson
      parameters:
      - name: id
        in: path
        description: Person ID to delete
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "204":
          description: Successful operation
        "404":
          description: Resource not found
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
    patch:
      tags:
      - person-controller
      summary: Patches an existing person
      description: Patches an existing person
      operationId: patchPerson
      parameters:
      - name: id
        in: path
        description: Person ID to patch
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/JsonPatchAnnotated"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PersonDto"
        "400":
          description: Bad request
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
        "404":
          description: Resource not found
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
  /v1/organization/{id}:
    get:
      tags:
      - organization-controller
      summary: Retrieves an organization by ID
      description: Retrieves an organization by ID
      operationId: getOrganization
      parameters:
      - name: id
        in: path
        description: Organization ID to retrieve
        required: true
        schema:
          type: string
          format: uuid
      - name: flatten
        in: query
        description: Whether to flatten out all attached members and organizations
          contained therein
        required: false
        schema:
          type: boolean
          default: false
      - name: people
        in: query
        description: "Comma-separated string list of fields to include in Person type\
          \ sub-fields. Example: people=id,firstName,lastName"
        required: false
        schema:
          type: string
          default: ""
      - name: organizations
        in: query
        description: "Comma-separated string list of fields to include in Organizational\
          \ type sub-fields. Example: organizations=id,name"
        required: false
        schema:
          type: string
          default: ""
      responses:
        "400":
          description: Bad Request or malformed UUID
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
        "404":
          description: Resource not found
        "200":
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/OrganizationDto"
    put:
      tags:
      - organization-controller
      summary: Updates an existing organization
      description: Updates an existing organization
      operationId: updateOrganization
      parameters:
      - name: id
        in: path
        description: Organization ID to update
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              description: Updated organization
              oneOf:
              - $ref: "#/components/schemas/OrganizationDto"
              - $ref: "#/components/schemas/Flight"
              - $ref: "#/components/schemas/Group"
              - $ref: "#/components/schemas/OtherUsaf"
              - $ref: "#/components/schemas/Squadron"
              - $ref: "#/components/schemas/Wing"
        required: true
      responses:
        "400":
          description: Bad request
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
        "404":
          description: Resource not found
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
        "200":
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/OrganizationDto"
    delete:
      tags:
      - organization-controller
      summary: Deletes an existing organization
      description: Deletes an existing organization
      operationId: deleteOrganization
      parameters:
      - name: id
        in: path
        description: Organization ID to delete
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "204":
          description: Successful operation
        "404":
          description: Resource not found
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
    patch:
      tags:
      - organization-controller
      summary: Updates an existing organization's attributes
      description: Updates an existing organization's attributes
      operationId: patchOrganization
      parameters:
      - name: id
        in: path
        description: Organization ID to update
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: string
              description: Object hash containing the keys to modify (set fields to
                null to clear that field)
        required: true
      responses:
        "400":
          description: A provided person UUID was invalid
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
        "404":
          description: Organization resource not found
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
        "200":
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/OrganizationDto"
  /v1/dashboard-users/{id}:
    get:
      tags:
      - dashboard-user-controller
      summary: Retrieves a dashboard user by ID
      description: Retrieves a dashboard user by ID
      operationId: getDashboardUser
      parameters:
      - name: id
        in: path
        description: Dashboard User ID to retrieve
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/DashboardUserDto"
        "400":
          description: Bad request
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
        "404":
          description: Resource not found
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
    put:
      tags:
      - dashboard-user-controller
      summary: Updates an existing dashboard user
      description: Updates an existing dashboard user
      operationId: updateDashboardUser
      parameters:
      - name: id
        in: path
        description: Dashboard User ID to update
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DashboardUserDto"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/DashboardUserDto"
        "404":
          description: Resource not found
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
    delete:
      tags:
      - dashboard-user-controller
      summary: Deletes an existing person
      description: Deletes an existing person
      operationId: deleteDashboardUser
      parameters:
      - name: id
        in: path
        description: Dashboard ID to delete
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "204":
          description: Successful operation
        "404":
          description: Resource not found
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
  /v1/app-source/{id}:
    get:
      tags:
      - app-source-controller
      summary: Returns the details for an App Source
      description: Requires DASHBOARD_ADMIN or APP_SOURCE_ADMIN rights.
      operationId: getAppSourceDetails
      parameters:
      - name: id
        in: path
        description: App Source UUID
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "404":
          description: Requested App Source not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
        "403":
          description: Insufficient privileges
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppSourceDetailsDto"
    put:
      tags:
      - app-source-controller
      summary: Updates the details for an App Source
      description: Requires DASHBOARD_ADMIN rights or be APP_SOURCE_ADMIN  of given
        App Id. Admin users can also be managed via this request method.  Emails for
        app source admins to a given App Source UUID will be implicitly added as new  DashboardUsers
        with the APP_SOURCE_ADMIN privilege.  Conversely a PUT that takes away an
        email that was there before  will be deleted as a DashboardUser if that email
        address does not have any other privileges in the system or its an  app source
        admin to some other app source application.
      operationId: updateAppSourceDetails
      parameters:
      - name: id
        in: path
        description: App Source id to update
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AppSourceDetailsDto"
        required: true
      responses:
        "404":
          description: Requested App Source not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
        "400":
          description: Malformed Request Body
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
        "403":
          description: Insufficient privileges
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppSourceDetailsDto"
    delete:
      tags:
      - app-source-controller
      summary: Deletes the App Source
      description: Requester has to have DASHBOARD_ADMIN rights
      operationId: deleteAppSource
      parameters:
      - name: id
        in: path
        description: App Source UUID
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "400":
          description: Id is malformed
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
        "403":
          description: No DASHBOARD_ADMIN privileges
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
        "200":
          description: App Source Removed OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AppSourceDetailsDto"
        "404":
          description: App Source Id not found
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
  /v1/app-client/{id}:
    put:
      tags:
      - app-client-controller
      summary: Updates an existing Application Client
      description: Updates an existing Application Client
      operationId: updateAppClient
      parameters:
      - name: id
        in: path
        description: App Client ID to update
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AppClientUserDto"
        required: true
      responses:
        "400":
          description: Bad request
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
        "200":
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AppClientUserDto"
        "404":
          description: Resource not found
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
    delete:
      tags:
      - app-client-controller
      summary: Deletes an App Client
      description: Deletes an existing App Client
      operationId: deleteAppClient
      parameters:
      - name: id
        in: path
        description: App Client ID to delete
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AppClientUserDto"
        "404":
          description: Resource not found
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
  /v1/subscriptions:
    get:
      tags:
      - subscriber-controller
      summary: Retrieves all registered subscriptions
      description: Retrieves all subscriptions
      operationId: getAllSubscriptions
      responses:
        "200":
          description: Successful operation
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Subscriber"
    post:
      tags:
      - subscriber-controller
      summary: Adds/updates a subscription
      description: "Adds a new subscription, or updates an existing subscription"
      operationId: createSubscription
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Subscriber"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Subscriber"
  /v1/scratch:
    get:
      tags:
      - scratch-storage-controller
      summary: Retrieves all key-value pairs for all scratch space consuming apps
      description: Requires request to be under DASHBOARD_ADMIN privileges
      operationId: getAllKeyValuePairs
      responses:
        "403":
          description: No DASHBOARD_ADMIN privileges
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Successful operation
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ScratchStorageEntry"
    post:
      tags:
      - scratch-storage-controller
      summary: Adds or updates a key-value pair for a given App Id
      description: SCRATCH_WRITE privileges are required for the requester for the
        given App Id
      operationId: setKeyValuePair
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ScratchStorageEntry"
        required: true
      responses:
        "404":
          description: Application ID / Key name not valid or found
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/RecordNotFoundException"
        "200":
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ScratchStorageEntry"
        "403":
          description: Write / Update action forbidden - no WRITE privileges
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/InvalidScratchSpacePermissions"
        "400":
          description: Malformed Request Body
          content:
            '*/*':
              schema:
                type: object
  /v1/scratch/users:
    get:
      tags:
      - scratch-storage-controller
      summary: "Gets the entire table of Scratch Space users (ID, email...)"
      description: Requester has to have DASHBOARD_ADMIN rights
      operationId: getAllUsers
      responses:
        "403":
          description: No DASHBOARD_ADMIN privileges
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Successful operation
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ScratchStorageUser"
    post:
      tags:
      - scratch-storage-controller
      summary: Adds a new Scratch Space user by their P1 email address
      description: Requester has to have DASHBOARD_ADMIN rights
      operationId: addNewScratchUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ScratchStorageUser"
        required: true
      responses:
        "400":
          description: Malformed Scratch Storage object
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/BadRequestException"
        "201":
          description: New user added operation
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ScratchStorageUser"
        "403":
          description: No DASHBOARD_ADMIN privileges
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Scratch User UUID or email address is already is use
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResourceAlreadyExistsException"
  /v1/scratch/apps:
    get:
      tags:
      - scratch-storage-controller
      summary: Gets the entire table of Scratch Storage apps that are registered with
        Common API
      description: Requester has to have DASHBOARD_ADMIN rights
      operationId: getScratchSpaceApps
      responses:
        "200":
          description: Successful operation
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ScratchStorageAppRegistryDto"
        "403":
          description: No DASHBOARD_ADMIN privileges
          content:
            '*/*':
              schema:
                type: object
    post:
      tags:
      - scratch-storage-controller
      summary: Adds a new Scratch Strorage consuming app name to the Common API scratch
        storage space
      description: Requester has to have DASHBOARD_ADMIN rights
      operationId: postNewScratchSpaceApp
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ScratchStorageAppRegistryEntry"
        required: true
      responses:
        "409":
          description: App UUID or App Name is already is use
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResourceAlreadyExistsException"
        "201":
          description: App Registered OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ScratchStorageAppRegistryEntry"
        "403":
          description: No DASHBOARD_ADMIN privileges
          content:
            '*/*':
              schema:
                type: object
        "400":
          description: Malformed request body or app name already exists
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/BadRequestException"
  /v1/person:
    get:
      tags:
      - person-controller
      summary: Retrieves all persons
      description: Retrieves all persons
      operationId: getPersons
      parameters:
      - name: page
        in: query
        description: Page of content to retrieve
        required: false
        schema:
          type: integer
          format: int64
          default: 1
      - name: limit
        in: query
        description: Size of each page
        required: false
        schema:
          type: integer
          format: int64
      - name: memberships
        in: query
        description: Whether to include this person's organization memberships in
          the response
        required: false
        schema:
          type: boolean
      - name: leaderships
        in: query
        description: Whether to include the organization ids this person is the leader
          of in the response
        required: false
        schema:
          type: boolean
      responses:
        "200":
          description: Successful operation
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PersonDto"
    post:
      tags:
      - person-controller
      summary: Adds a person
      description: Adds a person
      operationId: createPerson
      requestBody:
        content:
          application/json:
            schema:
              description: Person to create
              oneOf:
              - $ref: "#/components/schemas/PersonDto"
              - $ref: "#/components/schemas/Airman"
              - $ref: "#/components/schemas/CoastGuardsman"
              - $ref: "#/components/schemas/Marine"
              - $ref: "#/components/schemas/Sailor"
              - $ref: "#/components/schemas/Soldier"
              - $ref: "#/components/schemas/Spaceman"
        required: true
      responses:
        "201":
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PersonDto"
        "400":
          description: Bad request
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
        "409":
          description: Resource already exists with the id provided
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
  /v1/person/persons:
    post:
      tags:
      - person-controller
      summary: Add one or more members to the database
      description: "Adds one or more person entities - returns that same array of\
        \ input persons with their assigned UUIDs. If the request does NOT return\
        \ 201 (Created) because of an error (see other return codes), then no new\
        \ persons will have been committed to the database (if one entity fails, the\
        \ entire operation fails). The return error message will list the offending\
        \ UUID or other data that caused the error."
      operationId: addPersons
      requestBody:
        content:
          application/json:
            schema:
              type: array
              description: Array of persons to add
              items:
                oneOf:
                - $ref: "#/components/schemas/PersonDto"
                - $ref: "#/components/schemas/Airman"
                - $ref: "#/components/schemas/CoastGuardsman"
                - $ref: "#/components/schemas/Marine"
                - $ref: "#/components/schemas/Sailor"
                - $ref: "#/components/schemas/Soldier"
                - $ref: "#/components/schemas/Spaceman"
        required: true
      responses:
        "201":
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PersonDto"
        "409":
          description: A person already exists with the id provided
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
        "400":
          description: Bad data or validation error
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
  /v1/organization:
    get:
      tags:
      - organization-controller
      summary: Retrieves all organizations
      description: "Retrieves all organizations.  Optionally can provide 'type' parameter\
        \ (e.g. 'WING') to filter by Organization type and/or 'branch' parameter to\
        \ filter by branch of service (e.g 'USAF'). If neither parameter is given,\
        \ then no filters are applied and request returns all Organizations.  Optionally\
        \ can also provide 'search' parameter to search on organization names within\
        \ the result set (case in-sensitive)."
      operationId: getOrganizations
      parameters:
      - name: type
        in: query
        description: Unit type to filter on
        required: false
        content:
          '*/*':
            schema:
              type: string
              enum:
              - SQUADRON
              - GROUP
              - FLIGHT
              - WING
              - OTHER_USAF
              - ORGANIZATION
      - name: branch
        in: query
        description: Branch type to filter on
        required: false
        content:
          '*/*':
            schema:
              type: string
              enum:
              - OTHER
              - USA
              - USAF
              - USMC
              - USN
              - USSF
              - USCG
      - name: search
        in: query
        description: Case insensitive search string for org name
        required: false
        schema:
          type: string
          default: ""
      - name: people
        in: query
        description: "Comma-separated string list to include in Person type sub-fields.\
          \ Example: people=id,firstName,lastName"
        required: false
        schema:
          type: string
          default: ""
      - name: organizations
        in: query
        description: "Comma-separated string list to include in Organization type\
          \ sub-fields. Example: organizations=id,name"
        required: false
        schema:
          type: string
          default: ""
      - name: page
        in: query
        description: Page of content to retrieve
        required: false
        schema:
          type: integer
          format: int64
          default: 1
      - name: limit
        in: query
        description: Size of each page
        required: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Successful operation
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrganizationDto"
        "400":
          description: Bad Request - likely due to invalid unit type or branch of
            service specified
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/OrganizationDto"
    post:
      tags:
      - organization-controller
      summary: Adds an organization
      description: Adds an organization
      operationId: createOrganization
      requestBody:
        content:
          application/json:
            schema:
              description: Organization to create
              oneOf:
              - $ref: "#/components/schemas/OrganizationDto"
              - $ref: "#/components/schemas/Flight"
              - $ref: "#/components/schemas/Group"
              - $ref: "#/components/schemas/OtherUsaf"
              - $ref: "#/components/schemas/Squadron"
              - $ref: "#/components/schemas/Wing"
        required: true
      responses:
        "201":
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/OrganizationDto"
        "409":
          description: Resource already exists with the id provided
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
  /v1/organization/organizations:
    post:
      tags:
      - organization-controller
      summary: Adds one or more organization entities
      description: "Adds one or more organization entities - returns that same array\
        \ of input organizations with their assigned UUIDs. If the request does NOT\
        \ return 201 (Created) because of an error (see other return codes), then\
        \ any new organizations up to that organization that caused the failure will\
        \ have been committed (but none thereafter)The return error message will list\
        \ the offending UUID or other data that caused the error."
      operationId: addNewOrganizations
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                oneOf:
                - $ref: "#/components/schemas/OrganizationDto"
                - $ref: "#/components/schemas/Flight"
                - $ref: "#/components/schemas/Group"
                - $ref: "#/components/schemas/OtherUsaf"
                - $ref: "#/components/schemas/Squadron"
                - $ref: "#/components/schemas/Wing"
        required: true
      responses:
        "409":
          description: Bad Request / One of the supplied organizations contained a
            UUID that already exists or other duplicate data
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
        "400":
          description: Bad data or validation error
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
        "201":
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/OrganizationDto"
  /v1/dashboard-users:
    get:
      tags:
      - dashboard-user-controller
      summary: Retrieves all Dashboard Users
      description: Retrieves all Dashboard Users
      operationId: getAllDashboardUsers
      responses:
        "200":
          description: Successful operation
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DashboardUserDto"
    post:
      tags:
      - dashboard-user-controller
      summary: Adds a Dashboard User
      description: Adds a Dashboard User
      operationId: addDashboardUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DashboardUserDto"
        required: true
      responses:
        "201":
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/DashboardUserDto"
        "400":
          description: Bad request
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
        "409":
          description: Resource already exists with the email provided
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
  /v1/app-source:
    get:
      tags:
      - app-source-controller
      summary: Gets all App Sources.
      description: Requires DASHBOARD_ADMIN rights
      operationId: getAppSources
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AppSourceDto"
        "403":
          description: No DASHBOARD_ADMIN privileges
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
    post:
      tags:
      - app-source-controller
      summary: Creates an App Source including App Client permissions.
      description: Requires DASHBOARD_ADMIN rights
      operationId: createAppSource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AppSourceDetailsDto"
        required: true
      responses:
        "400":
          description: Malformed Request Body
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
        "403":
          description: No DASHBOARD_ADMIN privileges
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
        "201":
          description: Successful creation
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AppSourceDetailsDto"
  /v1/app-client:
    get:
      tags:
      - app-client-controller
      summary: Retrieves all application client user information
      description: Retrieves application client user information
      operationId: getAppClientUsers
      responses:
        "200":
          description: Successful operation
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AppClientUserDto"
    post:
      tags:
      - app-client-controller
      summary: Adds a App Client User
      description: Adds a App Client User
      operationId: createAppClientUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AppClientUserDto"
        required: true
      responses:
        "400":
          description: Bad request
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
        "409":
          description: Resource already exists with the name provided
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
        "201":
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AppClientUserDto"
  /v1/scratch/apps/{id}/user:
    patch:
      tags:
      - scratch-storage-controller
      summary: Adds a user privilege to this app's data
      description: "Requester has to have DASHBOARD_ADMIN rights, or have SCRATCH_ADMIN\
        \ rights for given app ID"
      operationId: addUserPriv
      parameters:
      - name: id
        in: path
        description: Application UUID
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ScratchStorageAppUserPrivDto"
        required: true
      responses:
        "404":
          description: Application ID not found
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/RecordNotFoundException"
        "409":
          description: This app/user/priv combo already exists
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResourceAlreadyExistsException"
        "400":
          description: Malformed request body / app name already exists or appId is
            malformed
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/BadRequestException"
        "403":
          description: "No DASHBOARD_ADMIN privileges, or no SCRATCH_ADMIN privileges\
            \ for given app id"
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: App Priv Added OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ScratchStorageAppRegistryEntry"
  /v1/scratch/apps/{id}/implicitRead:
    patch:
      tags:
      - scratch-storage-controller
      summary: Sets or un-sets the app's implicit read field
      description: "Requester has to have DASHBOARD_ADMIN rights, or have SCRATCH_ADMIN\
        \ rights for given app ID"
      operationId: setImplicitReadSetting
      parameters:
      - name: id
        in: path
        description: Application UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: priv
        in: query
        description: Application User-Priv Object
        required: true
        schema:
          type: boolean
          default: false
      responses:
        "400":
          description: Malformed appId or query parameter
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/BadRequestException"
        "404":
          description: Application ID not found
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/RecordNotFoundException"
        "403":
          description: "No DASHBOARD_ADMIN privileges, or no SCRATCH_ADMIN privileges\
            \ for given app id"
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: App Modified OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ScratchStorageAppRegistryEntry"
  /v1/organization/{id}/subordinates:
    delete:
      tags:
      - organization-controller
      summary: Remove subordinate organizations from an organization
      description: Removes subordinate orgs from an organization
      operationId: removeSubordinateOrganization
      parameters:
      - name: id
        in: path
        description: UUID of the host organization record
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              description: UUID(s) of subordinate organizations
              items:
                type: string
                format: uuid
        required: true
      responses:
        "404":
          description: Host organization UUID was invalid
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
        "400":
          description: Provided org UUID(s) was/were invalid
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
        "204":
          description: Successful operation
    patch:
      tags:
      - organization-controller
      summary: Add subordinate organizations to an organization
      description: Adds subordinate orgs to an organization
      operationId: addSubordinateOrganization
      parameters:
      - name: id
        in: path
        description: UUID of the host organization record
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              description: UUID(s) of subordinate organizations
              items:
                type: string
                format: uuid
        required: true
      responses:
        "404":
          description: Host organization UUID was invalid
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
        "400":
          description: Provided org UUID(s) was/were invalid
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
        "204":
          description: Successful operation
  /v1/organization/{id}/members:
    delete:
      tags:
      - organization-controller
      summary: Deletes a member(s) from the organization
      description: Deletes a member(s) from an organization
      operationId: deleteOrganizationMember
      parameters:
      - name: id
        in: path
        description: UUID of the organization to modify
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              description: UUID(s) of the member(s) to remove
              items:
                type: string
                format: uuid
        required: true
      responses:
        "204":
          description: Successful operation
        "404":
          description: Provided organization UUID was invalid
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
        "400":
          description: Provided person UUID(s) was/were invalid
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
    patch:
      tags:
      - organization-controller
      summary: Add member(s) to an organization
      description: Adds member(s) to an organization
      operationId: addOrganizationMember
      parameters:
      - name: id
        in: path
        description: UUID of the organization record
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              description: UUID(s) of the member(s) to add
              items:
                type: string
                format: uuid
        required: true
      responses:
        "404":
          description: A organization UUID was invalid
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
        "204":
          description: Successful operation
        "400":
          description: Provided person UUID(s) was/were invalid
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
  /v1/app-source/admins/{id}:
    delete:
      tags:
      - app-source-controller
      summary: Deletes a single app source admin by email address from provided App
        Source
      description: "Requester has to have DASHBOARD_ADMIN rights or be APP_SOURCE_ADMIN\
        \ of given App Id.  Request payload is a DashboardUserDto, but only needed/required\
        \ fields are the email address."
      operationId: removeAppSourceAdmin
      parameters:
      - name: id
        in: path
        description: App Source UUID
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DashboardUserDto"
        required: true
      responses:
        "400":
          description: Id is malformed
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
        "200":
          description: Admin Removed OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AppSourceDetailsDto"
        "403":
          description: Insufficient privileges
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
        "404":
          description: App Source Id not found
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
    patch:
      tags:
      - app-source-controller
      summary: Adds single app source admin by email address to provided App Source
      description: "Requester has to have DASHBOARD_ADMIN rights or be APP_SOURCE_ADMIN\
        \ of given App Id.  Request payload is a DashboardUserDto, but only needed/required\
        \ fields are the email address."
      operationId: addAppSourceAdmin
      parameters:
      - name: id
        in: path
        description: App Source UUID
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DashboardUserDto"
        required: true
      responses:
        "400":
          description: Id is malformed
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
        "200":
          description: Admin Added OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AppSourceDetailsDto"
        "403":
          description: Insufficient privileges
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
        "404":
          description: App Source Id not found
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
  /v1/userinfo:
    get:
      tags:
      - user-info-controller
      summary: Retrieves the user information from the jwt
      description: Retrieves user information
      operationId: getUserInfo
      responses:
        "400":
          description: Bad request
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
        "200":
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserInfoDto"
  /v1/subscriptions/{id}:
    get:
      tags:
      - subscriber-controller
      summary: Retrieves a registered subscription
      description: Retrieve a subscription by its UUID
      operationId: getSubscription
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "404":
          description: Record not found
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
        "200":
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Subscriber"
    delete:
      tags:
      - subscriber-controller
      summary: Deletes a subscription
      description: Deletes a subscription by its UUID
      operationId: cancelSubscription
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "404":
          description: Record not found
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
        "200":
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Subscriber"
  /v1/subscriptions/events/replay:
    get:
      tags:
      - subscriber-controller
      summary: Retrieves all legder entries from specified date/time
      description: Retrieves all ledger entries from specified date/time
      operationId: getEventSinceDate
      parameters:
      - name: sinceDateTime
        in: query
        required: true
        schema:
          type: string
          format: date-time
      responses:
        "200":
          description: Successful operation
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PubSubLedger"
  /v1/subscriptions/events/latest:
    get:
      tags:
      - subscriber-controller
      summary: Retrieves most current counts for each event type
      description: Retrieves latest counts for each event type in a key-value pair
        object
      operationId: getLatestCounts
      responses:
        "200":
          description: Successful operation
          content:
            '*/*':
              schema:
                type: object
  /v1/scratch/{appId}:
    get:
      tags:
      - scratch-storage-controller
      summary: Retrieves all key-value pairs for for a single app
      description: App ID is the UUID of the owning application
      operationId: getAllKeyValuePairsForAppId
      parameters:
      - name: appId
        in: path
        description: Application UUID
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "404":
          description: Application ID not valid or found
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/RecordNotFoundException"
        "200":
          description: Successful operation
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ScratchStorageEntry"
        "400":
          description: Malformed Application UUID
          content:
            '*/*':
              schema:
                type: object
    delete:
      tags:
      - scratch-storage-controller
      summary: Deletes all key-value pairs for a given App Id
      description: SCRATCH_WRITE privileges are required for the requester for the
        given App Id
      operationId: deleteAllKeyValuePairsForAppId
      parameters:
      - name: appId
        in: path
        description: Application UUID
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ScratchStorageEntry"
        "404":
          description: Application ID not valid or found
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/RecordNotFoundException"
        "403":
          description: Write / Update action forbidden - no WRITE privileges
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/InvalidScratchSpacePermissions"
        "400":
          description: Malformed Request Body
          content:
            '*/*':
              schema:
                type: object
  /v1/scratch/{appId}/{keyName}:
    get:
      tags:
      - scratch-storage-controller
      summary: Retrieves a singe key-value pair for for a single app
      description: App ID is the UUID of the owning application
      operationId: getKeyValueByKeyName
      parameters:
      - name: appId
        in: path
        description: Application UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: keyName
        in: path
        description: Key Name to look up
        required: true
        schema:
          type: string
      responses:
        "404":
          description: Application ID / Key name not valid or found
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/RecordNotFoundException"
        "200":
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ScratchStorageEntry"
        "400":
          description: Malformed Application UUID
          content:
            '*/*':
              schema:
                type: object
  /v1/scratch/users/privs:
    get:
      tags:
      - scratch-storage-controller
      summary: Gets all SCRATCH space privileges available
      description: Gets all the SCRATCH space privileges so that privilege names can
        be mapped to their IDs
      operationId: getScratchPrivs
      responses:
        "200":
          description: Operation Successful
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PrivilegeDto"
  /v1/scratch/apps/{appId}:
    get:
      tags:
      - scratch-storage-controller
      summary: Gets a single Scratch Storage app's record that is registered with
        Common API
      description: Requester has to have DASHBOARD_ADMIN rights or have SCRATCH_ADMIN
        rights for given app ID.
      operationId: getScratchAppById
      parameters:
      - name: appId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "403":
          description: "No DASHBOARD_ADMIN privileges, or no SCRATCH_ADMIN privilege\
            \ for given app ID."
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ScratchStorageAppRegistryDto"
  /v1/scratch/apps/{appId}/keys:
    get:
      tags:
      - scratch-storage-controller
      summary: Retrieves all keys for for a single app
      description: App ID is the UUID of the owning application
      operationId: getAllKeysForAppId
      parameters:
      - name: appId
        in: path
        description: Application UUID
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "404":
          description: Application ID not valid or found
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/RecordNotFoundException"
        "200":
          description: Successful operation
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ScratchStorageEntry"
        "400":
          description: Malformed Application UUID
          content:
            '*/*':
              schema:
                type: object
  /v1/rank:
    get:
      tags:
      - rank-controller
      summary: Retrieves all ranks
      description: Retrieves all ranks
      operationId: getRanks
      responses:
        "200":
          description: Successful operation
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Rank"
  /v1/rank/{branch}:
    get:
      tags:
      - rank-controller
      summary: Retrieves all ranks for a particular branch
      description: Retrieves all ranks for a particular branch
      operationId: getRanks_1
      parameters:
      - name: branch
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Rank"
        "404":
          description: Resource not found
  /v1/rank/{branch}/{abbreviation}:
    get:
      tags:
      - rank-controller
      summary: Retrieves information for a particular rank
      description: Retrieves information for a particular rank
      operationId: getRank
      parameters:
      - name: branch
        in: path
        required: true
        schema:
          type: string
      - name: abbreviation
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Rank"
        "404":
          description: Resource not found
  /v1/puckboard/extract:
    get:
      tags:
      - puckboard-etl-controller
      operationId: getPuckboardData
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /v1/privilege:
    get:
      tags:
      - privilege-controller
      summary: Retrieves all Privilege information
      description: Retrieves Privilege information
      operationId: getPrivileges
      responses:
        "200":
          description: Successful operation
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PrivilegeDto"
  /v1/logfile:
    get:
      tags:
      - logfile-controller
      summary: Retrieves all logfiles info
      description: Retrieves all logfiles available for download
      operationId: getLogfileInfo
      responses:
        "403":
          description: Forbidden (Requires DASHBOARD_ADMIN privilege)
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
        "200":
          description: Successful operation
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LogfileDto"
  /v1/logfile/{fileName}:
    get:
      tags:
      - logfile-controller
      summary: Retrieves a logfile for download
      description: Retrieves a logfile for download
      operationId: getLogfile
      parameters:
      - name: fileName
        in: path
        required: true
        schema:
          type: string
      responses:
        "404":
          description: File not found
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
        "400":
          description: I/O error involving file
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
        "200":
          description: Successful operation
          content:
            '*/*':
              schema:
                type: string
                format: binary
        "403":
          description: Forbidden (Requires DASHBOARD_ADMIN privilege)
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
  /v1/list-request-headers:
    get:
      tags:
      - header-request-controller
      operationId: getHeaders
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /v1/dashboard-users/self:
    get:
      tags:
      - dashboard-user-controller
      summary: Retrieves the currently authorized dashboard user
      description: Retrieves the authorized dashboard user
      operationId: getSelfDashboardUser
      responses:
        "200":
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/DashboardUserDto"
        "403":
          description: Forbidden (user does not exist)
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
  /v1/scratch/{appId}/key/{key}:
    delete:
      tags:
      - scratch-storage-controller
      summary: Deletes a key-value pair for a given App Id
      description: SCRATCH_WRITE privileges are required for the requester for the
        given App Id
      operationId: deleteKeyValuePair
      parameters:
      - name: appId
        in: path
        description: Application UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: key
        in: path
        description: Key name of the key-value pair to delete
        required: true
        schema:
          type: string
      responses:
        "404":
          description: Application ID / Key name not valid or found
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/RecordNotFoundException"
        "200":
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ScratchStorageEntry"
        "403":
          description: Write / Update action forbidden - no WRITE privileges
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/InvalidScratchSpacePermissions"
        "400":
          description: Malformed Request Body
          content:
            '*/*':
              schema:
                type: object
  /v1/scratch/apps/{id}/user/{appPrivIdEntry}:
    delete:
      tags:
      - scratch-storage-controller
      summary: Removes a user privilege from this app's data
      description: Requester has to have DASHBOARD_ADMIN rights
      operationId: removeUserPriv
      parameters:
      - name: id
        in: path
        description: Application UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: appPrivIdEntry
        in: path
        description: UUID of the User-Priv set to remove
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: App Priv Removed OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ScratchStorageAppRegistryEntry"
        "404":
          description: Application ID not found
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/RecordNotFoundException"
        "400":
          description: Malformed request body / app name already exists or appId is
            malformed
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/BadRequestException"
        "403":
          description: "No DASHBOARD_ADMIN privileges, or no SCRATCH_ADMIN privileges\
            \ for given app id"
          content:
            '*/*':
              schema:
                type: object
  /v1/organization/{id}/parent:
    delete:
      tags:
      - organization-controller
      summary: Deletes a parent from a subordinate organization
      description: Deletes/clears out the parent org with no org
      operationId: deleteOrgParent
      parameters:
      - name: id
        in: path
        description: Organization ID to delete the parent from
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "404":
          description: Organization not found
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
        "200":
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/OrganizationDto"
  /v1/organization/{id}/leader:
    delete:
      tags:
      - organization-controller
      summary: Deletes a leader from an organization
      description: Deletes/clears out the leader position with no one
      operationId: deleteOrgLeader
      parameters:
      - name: id
        in: path
        description: Organization ID to delete the leader from
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "404":
          description: Organization not found
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
        "200":
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/OrganizationDto"
components:
  schemas:
    ScratchStorageUser:
      required:
      - email
      type: object
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
    ResourceAlreadyExistsException:
      type: object
      properties:
        cause:
          type: object
          properties:
            stackTrace:
              type: array
              items:
                type: object
                properties:
                  classLoaderName:
                    type: string
                  moduleName:
                    type: string
                  moduleVersion:
                    type: string
                  methodName:
                    type: string
                  fileName:
                    type: string
                  lineNumber:
                    type: integer
                    format: int32
                  className:
                    type: string
                  nativeMethod:
                    type: boolean
            message:
              type: string
            suppressed:
              type: array
              items:
                type: object
                properties:
                  stackTrace:
                    type: array
                    items:
                      type: object
                      properties:
                        classLoaderName:
                          type: string
                        moduleName:
                          type: string
                        moduleVersion:
                          type: string
                        methodName:
                          type: string
                        fileName:
                          type: string
                        lineNumber:
                          type: integer
                          format: int32
                        className:
                          type: string
                        nativeMethod:
                          type: boolean
                  message:
                    type: string
                  localizedMessage:
                    type: string
            localizedMessage:
              type: string
        stackTrace:
          type: array
          items:
            type: object
            properties:
              classLoaderName:
                type: string
              moduleName:
                type: string
              moduleVersion:
                type: string
              methodName:
                type: string
              fileName:
                type: string
              lineNumber:
                type: integer
                format: int32
              className:
                type: string
              nativeMethod:
                type: boolean
        message:
          type: string
        suppressed:
          type: array
          items:
            type: object
            properties:
              stackTrace:
                type: array
                items:
                  type: object
                  properties:
                    classLoaderName:
                      type: string
                    moduleName:
                      type: string
                    moduleVersion:
                      type: string
                    methodName:
                      type: string
                    fileName:
                      type: string
                    lineNumber:
                      type: integer
                      format: int32
                    className:
                      type: string
                    nativeMethod:
                      type: boolean
              message:
                type: string
              localizedMessage:
                type: string
        localizedMessage:
          type: string
    BadRequestException:
      type: object
      properties:
        cause:
          type: object
          properties:
            stackTrace:
              type: array
              items:
                type: object
                properties:
                  classLoaderName:
                    type: string
                  moduleName:
                    type: string
                  moduleVersion:
                    type: string
                  methodName:
                    type: string
                  fileName:
                    type: string
                  lineNumber:
                    type: integer
                    format: int32
                  className:
                    type: string
                  nativeMethod:
                    type: boolean
            message:
              type: string
            suppressed:
              type: array
              items:
                type: object
                properties:
                  stackTrace:
                    type: array
                    items:
                      type: object
                      properties:
                        classLoaderName:
                          type: string
                        moduleName:
                          type: string
                        moduleVersion:
                          type: string
                        methodName:
                          type: string
                        fileName:
                          type: string
                        lineNumber:
                          type: integer
                          format: int32
                        className:
                          type: string
                        nativeMethod:
                          type: boolean
                  message:
                    type: string
                  localizedMessage:
                    type: string
            localizedMessage:
              type: string
        stackTrace:
          type: array
          items:
            type: object
            properties:
              classLoaderName:
                type: string
              moduleName:
                type: string
              moduleVersion:
                type: string
              methodName:
                type: string
              fileName:
                type: string
              lineNumber:
                type: integer
                format: int32
              className:
                type: string
              nativeMethod:
                type: boolean
        message:
          type: string
        suppressed:
          type: array
          items:
            type: object
            properties:
              stackTrace:
                type: array
                items:
                  type: object
                  properties:
                    classLoaderName:
                      type: string
                    moduleName:
                      type: string
                    moduleVersion:
                      type: string
                    methodName:
                      type: string
                    fileName:
                      type: string
                    lineNumber:
                      type: integer
                      format: int32
                    className:
                      type: string
                    nativeMethod:
                      type: boolean
              message:
                type: string
              localizedMessage:
                type: string
        localizedMessage:
          type: string
    RecordNotFoundException:
      type: object
      properties:
        cause:
          type: object
          properties:
            stackTrace:
              type: array
              items:
                type: object
                properties:
                  classLoaderName:
                    type: string
                  moduleName:
                    type: string
                  moduleVersion:
                    type: string
                  methodName:
                    type: string
                  fileName:
                    type: string
                  lineNumber:
                    type: integer
                    format: int32
                  className:
                    type: string
                  nativeMethod:
                    type: boolean
            message:
              type: string
            suppressed:
              type: array
              items:
                type: object
                properties:
                  stackTrace:
                    type: array
                    items:
                      type: object
                      properties:
                        classLoaderName:
                          type: string
                        moduleName:
                          type: string
                        moduleVersion:
                          type: string
                        methodName:
                          type: string
                        fileName:
                          type: string
                        lineNumber:
                          type: integer
                          format: int32
                        className:
                          type: string
                        nativeMethod:
                          type: boolean
                  message:
                    type: string
                  localizedMessage:
                    type: string
            localizedMessage:
              type: string
        stackTrace:
          type: array
          items:
            type: object
            properties:
              classLoaderName:
                type: string
              moduleName:
                type: string
              moduleVersion:
                type: string
              methodName:
                type: string
              fileName:
                type: string
              lineNumber:
                type: integer
                format: int32
              className:
                type: string
              nativeMethod:
                type: boolean
        message:
          type: string
        suppressed:
          type: array
          items:
            type: object
            properties:
              stackTrace:
                type: array
                items:
                  type: object
                  properties:
                    classLoaderName:
                      type: string
                    moduleName:
                      type: string
                    moduleVersion:
                      type: string
                    methodName:
                      type: string
                    fileName:
                      type: string
                    lineNumber:
                      type: integer
                      format: int32
                    className:
                      type: string
                    nativeMethod:
                      type: boolean
              message:
                type: string
              localizedMessage:
                type: string
        localizedMessage:
          type: string
    Privilege:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    ScratchStorageAppRegistryEntry:
      required:
      - appName
      type: object
      properties:
        id:
          type: string
          format: uuid
        appName:
          type: string
        appHasImplicitRead:
          type: boolean
        userPrivs:
          uniqueItems: true
          type: array
          items:
            $ref: "#/components/schemas/ScratchStorageAppUserPriv"
    ScratchStorageAppUserPriv:
      type: object
      properties:
        id:
          type: string
          format: uuid
        user:
          $ref: "#/components/schemas/ScratchStorageUser"
        privilege:
          $ref: "#/components/schemas/Privilege"
    Airman:
      type: object
      allOf:
      - $ref: "#/components/schemas/PersonDto"
      - type: object
        properties:
          afsc:
            type: string
          etsDate:
            type: string
            format: date-time
          ptDate:
            type: string
            format: date-time
          imds:
            type: string
          unit:
            type: string
          wing:
            type: string
          gp:
            type: string
          squadron:
            type: string
          wc:
            type: string
          go81:
            type: string
          dor:
            type: string
            format: date-time
          deros:
            type: string
          admin:
            type: boolean
          fltChief:
            type: string
          approved:
            type: boolean
          manNumber:
            type: string
    CoastGuardsman:
      type: object
      allOf:
      - $ref: "#/components/schemas/PersonDto"
    Marine:
      type: object
      allOf:
      - $ref: "#/components/schemas/PersonDto"
    PersonDto:
      title: Person
      type: object
      properties:
        id:
          type: string
          format: uuid
        firstName:
          type: string
        middleName:
          type: string
        lastName:
          type: string
        title:
          type: string
        email:
          type: string
        dodid:
          type: string
        rank:
          type: string
        branch:
          type: string
          enum:
          - OTHER
          - USA
          - USAF
          - USMC
          - USN
          - USSF
          - USCG
        phone:
          type: string
        address:
          type: string
        dutyPhone:
          type: string
        dutyTitle:
          type: string
        organizationMemberships:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
        organizationLeaderships:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
      discriminator:
        propertyName: branch
        mapping:
          USAF: "#/components/schemas/Airman"
          USCG: "#/components/schemas/CoastGuardsman"
          USMC: "#/components/schemas/Marine"
          USN: "#/components/schemas/Sailor"
          USA: "#/components/schemas/Soldier"
          USSF: "#/components/schemas/Spaceman"
          OTHER: "#/components/schemas/PersonDto"
    Sailor:
      type: object
      allOf:
      - $ref: "#/components/schemas/PersonDto"
    Soldier:
      type: object
      allOf:
      - $ref: "#/components/schemas/PersonDto"
    Spaceman:
      type: object
      allOf:
      - $ref: "#/components/schemas/PersonDto"
    ExceptionResponse:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        status:
          type: integer
          format: int32
        error:
          type: string
        message:
          type: string
        path:
          type: string
    Flight:
      type: object
      allOf:
      - $ref: "#/components/schemas/OrganizationDto"
      - type: object
        properties:
          pas:
            type: string
    Group:
      type: object
      allOf:
      - $ref: "#/components/schemas/OrganizationDto"
      - type: object
        properties:
          pas:
            type: string
    OrganizationDto:
      title: Organization
      type: object
      properties:
        id:
          type: string
          format: uuid
        leader:
          type: string
          format: uuid
        members:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
        parentOrganization:
          type: string
          format: uuid
        subordinateOrganizations:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
        name:
          type: string
        orgType:
          type: string
          enum:
          - SQUADRON
          - GROUP
          - FLIGHT
          - WING
          - OTHER_USAF
          - ORGANIZATION
        branchType:
          type: string
          enum:
          - OTHER
          - USA
          - USAF
          - USMC
          - USN
          - USSF
          - USCG
      discriminator:
        propertyName: orgType
        mapping:
          FLIGHT: "#/components/schemas/Flight"
          GROUP: "#/components/schemas/Group"
          OTHER_USAF: "#/components/schemas/OtherUsaf"
          SQUADRON: "#/components/schemas/Squadron"
          WING: "#/components/schemas/Wing"
          ORGANIZATION: "#/components/schemas/OrganizationDto"
    OtherUsaf:
      type: object
      allOf:
      - $ref: "#/components/schemas/OrganizationDto"
    Squadron:
      type: object
      allOf:
      - $ref: "#/components/schemas/OrganizationDto"
      - type: object
        properties:
          pas:
            type: string
    Wing:
      type: object
      allOf:
      - $ref: "#/components/schemas/OrganizationDto"
      - type: object
        properties:
          pas:
            type: string
    DashboardUserDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
        privileges:
          type: array
          items:
            $ref: "#/components/schemas/Privilege"
      description: Admin To Remove Email
    AppClientUserPrivDto:
      required:
      - appClientUser
      - privilegeIds
      type: object
      properties:
        appClientUser:
          type: string
          format: uuid
        appClientUserName:
          type: string
        privilegeIds:
          type: array
          items:
            type: integer
            format: int64
    AppSourceDetailsDto:
      required:
      - name
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        appSourceAdminUserEmails:
          type: array
          items:
            type: string
        appClients:
          type: array
          items:
            $ref: "#/components/schemas/AppClientUserPrivDto"
    AppClientUserDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        privileges:
          type: array
          items:
            $ref: "#/components/schemas/Privilege"
        name:
          type: string
    Subscriber:
      required:
      - subscribedEvent
      - subscriberAddress
      type: object
      properties:
        id:
          type: string
          format: uuid
        subscriberAddress:
          type: string
        subscribedEvent:
          type: string
          enum:
          - PERSON_CHANGE
          - PERSON_DELETE
          - ORGANIZATION_CHANGE
          - ORGANIZATION_DELETE
          - PERSON_ORG_ADD
          - PERSON_ORG_REMOVE
          - SUB_ORG_ADD
          - SUB_ORG_REMOVE
        secret:
          type: string
    ScratchStorageEntry:
      required:
      - appId
      - key
      type: object
      properties:
        appId:
          type: string
          format: uuid
        key:
          type: string
        value:
          type: string
    InvalidScratchSpacePermissions:
      type: object
      properties:
        cause:
          type: object
          properties:
            stackTrace:
              type: array
              items:
                type: object
                properties:
                  classLoaderName:
                    type: string
                  moduleName:
                    type: string
                  moduleVersion:
                    type: string
                  methodName:
                    type: string
                  fileName:
                    type: string
                  lineNumber:
                    type: integer
                    format: int32
                  className:
                    type: string
                  nativeMethod:
                    type: boolean
            message:
              type: string
            suppressed:
              type: array
              items:
                type: object
                properties:
                  stackTrace:
                    type: array
                    items:
                      type: object
                      properties:
                        classLoaderName:
                          type: string
                        moduleName:
                          type: string
                        moduleVersion:
                          type: string
                        methodName:
                          type: string
                        fileName:
                          type: string
                        lineNumber:
                          type: integer
                          format: int32
                        className:
                          type: string
                        nativeMethod:
                          type: boolean
                  message:
                    type: string
                  localizedMessage:
                    type: string
            localizedMessage:
              type: string
        stackTrace:
          type: array
          items:
            type: object
            properties:
              classLoaderName:
                type: string
              moduleName:
                type: string
              moduleVersion:
                type: string
              methodName:
                type: string
              fileName:
                type: string
              lineNumber:
                type: integer
                format: int32
              className:
                type: string
              nativeMethod:
                type: boolean
        message:
          type: string
        suppressed:
          type: array
          items:
            type: object
            properties:
              stackTrace:
                type: array
                items:
                  type: object
                  properties:
                    classLoaderName:
                      type: string
                    moduleName:
                      type: string
                    moduleVersion:
                      type: string
                    methodName:
                      type: string
                    fileName:
                      type: string
                    lineNumber:
                      type: integer
                      format: int32
                    className:
                      type: string
                    nativeMethod:
                      type: boolean
              message:
                type: string
              localizedMessage:
                type: string
        localizedMessage:
          type: string
    ScratchStorageAppUserPrivDto:
      required:
      - email
      - privilegeId
      type: object
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
        privilegeId:
          type: integer
          format: int64
      description: Application User-Priv Object
    JsonPatchAnnotated:
      type: object
      properties:
        op:
          type: string
        path:
          type: string
        value:
          type: array
          items:
            type: string
      description: Patched person
    UserInfoDto:
      type: object
      properties:
        dodId:
          type: string
        givenName:
          type: string
        familyName:
          type: string
        name:
          type: string
        preferredUsername:
          type: string
        email:
          type: string
        organization:
          type: string
    PubSubLedger:
      type: object
      properties:
        id:
          type: string
          format: uuid
        countForEventType:
          type: integer
          format: int64
        eventType:
          type: string
          enum:
          - PERSON_CHANGE
          - PERSON_DELETE
          - ORGANIZATION_CHANGE
          - ORGANIZATION_DELETE
          - PERSON_ORG_ADD
          - PERSON_ORG_REMOVE
          - SUB_ORG_ADD
          - SUB_ORG_REMOVE
        data:
          type: string
        dateCreated:
          type: string
          format: date-time
    PrivilegeDto:
      required:
      - name
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    PrivilegeIdPair:
      type: object
      properties:
        userPrivPairId:
          type: string
          format: uuid
        priv:
          $ref: "#/components/schemas/Privilege"
    ScratchStorageAppRegistryDto:
      required:
      - appName
      type: object
      properties:
        id:
          type: string
          format: uuid
        appName:
          type: string
        appHasImplicitRead:
          type: boolean
        userPrivs:
          type: array
          items:
            $ref: "#/components/schemas/UserWithPrivs"
    UserWithPrivs:
      type: object
      properties:
        userId:
          type: string
          format: uuid
        emailAddress:
          type: string
        privs:
          type: array
          items:
            $ref: "#/components/schemas/PrivilegeIdPair"
    Rank:
      type: object
      properties:
        abbreviation:
          type: string
        name:
          type: string
        payGrade:
          type: string
        branchType:
          type: string
          enum:
          - OTHER
          - USA
          - USAF
          - USMC
          - USN
          - USSF
          - USCG
    LogfileDto:
      type: object
      properties:
        name:
          type: string
        downloadUri:
          type: string
    AppSourceDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        clientCount:
          type: integer
          format: int32
