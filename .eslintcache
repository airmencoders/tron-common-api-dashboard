[{"/Users/ckumabs03/projects/tron-common-api-dashboard/src/index.tsx":"1","/Users/ckumabs03/projects/tron-common-api-dashboard/src/reportWebVitals.ts":"2","/Users/ckumabs03/projects/tron-common-api-dashboard/src/App.tsx":"3","/Users/ckumabs03/projects/tron-common-api-dashboard/src/context/PersonProvider.tsx":"4","/Users/ckumabs03/projects/tron-common-api-dashboard/src/Components/Person/PersonControl.tsx":"5","/Users/ckumabs03/projects/tron-common-api-dashboard/src/openapi/index.ts":"6","/Users/ckumabs03/projects/tron-common-api-dashboard/src/context/PersonProviderContext.tsx":"7","/Users/ckumabs03/projects/tron-common-api-dashboard/src/openapi/runtime.ts":"8","/Users/ckumabs03/projects/tron-common-api-dashboard/src/openapi/models/index.ts":"9","/Users/ckumabs03/projects/tron-common-api-dashboard/src/openapi/apis/index.ts":"10","/Users/ckumabs03/projects/tron-common-api-dashboard/src/openapi/models/Airman.ts":"11","/Users/ckumabs03/projects/tron-common-api-dashboard/src/openapi/apis/PuckboardEtlControllerApi.ts":"12","/Users/ckumabs03/projects/tron-common-api-dashboard/src/openapi/models/SquadronDto.ts":"13","/Users/ckumabs03/projects/tron-common-api-dashboard/src/openapi/apis/HeaderRequestControllerApi.ts":"14","/Users/ckumabs03/projects/tron-common-api-dashboard/src/openapi/apis/SquadronControllerApi.ts":"15","/Users/ckumabs03/projects/tron-common-api-dashboard/src/openapi/apis/PersonControllerApi.ts":"16","/Users/ckumabs03/projects/tron-common-api-dashboard/src/openapi/apis/AirmanControllerApi.ts":"17","/Users/ckumabs03/projects/tron-common-api-dashboard/src/openapi/models/ExceptionResponse.ts":"18","/Users/ckumabs03/projects/tron-common-api-dashboard/src/openapi/apis/OrganizationControllerApi.ts":"19","/Users/ckumabs03/projects/tron-common-api-dashboard/src/openapi/models/Person.ts":"20","/Users/ckumabs03/projects/tron-common-api-dashboard/src/openapi/models/OrganizationDto.ts":"21","/Users/ckumabs03/projects/tron-common-api-dashboard/src/stories/Page.stories.tsx":"22","/Users/ckumabs03/projects/tron-common-api-dashboard/src/stories/Button.stories.tsx":"23","/Users/ckumabs03/projects/tron-common-api-dashboard/src/stories/Header.stories.tsx":"24","/Users/ckumabs03/projects/tron-common-api-dashboard/src/stories/Header.tsx":"25","/Users/ckumabs03/projects/tron-common-api-dashboard/src/stories/Button.tsx":"26","/Users/ckumabs03/projects/tron-common-api-dashboard/src/stories/Page.tsx":"27","/Users/ckumabs03/projects/tron-common-api-dashboard/src/components/Person/PersonControl.tsx":"28","/Users/ckumabs03/projects/tron-common-api-dashboard/src/stories/components/PageTitle.stories.tsx":"29","/Users/ckumabs03/projects/tron-common-api-dashboard/src/components/PageTitle/PageTitle.tsx":"30","/Users/ckumabs03/projects/tron-common-api-dashboard/src/stories/icons/IconsList.stories.tsx":"31","/Users/ckumabs03/projects/tron-common-api-dashboard/src/icons/StatusGoodIcon.tsx":"32","/Users/ckumabs03/projects/tron-common-api-dashboard/src/icons/RemoveIcon.tsx":"33","/Users/ckumabs03/projects/tron-common-api-dashboard/src/stories/components/PageFormat.stories.tsx":"34","/Users/ckumabs03/projects/tron-common-api-dashboard/src/components/PageFormat/PageFormat.tsx":"35","/Users/ckumabs03/projects/tron-common-api-dashboard/src/stories/components/Button.stories.tsx":"36","/Users/ckumabs03/projects/tron-common-api-dashboard/src/components/Button/Button.tsx":"37","/Users/ckumabs03/projects/tron-common-api-dashboard/src/stories/components/Grid.stories.tsx":"38","/Users/ckumabs03/projects/tron-common-api-dashboard/src/components/Grid/GridColumn.ts":"39","/Users/ckumabs03/projects/tron-common-api-dashboard/src/components/Grid/Grid.tsx":"40"},{"size":500,"mtime":1611006156896,"results":"41","hashOfConfig":"42"},{"size":425,"mtime":1611006156902,"results":"43","hashOfConfig":"42"},{"size":900,"mtime":1611180473808,"results":"44","hashOfConfig":"42"},{"size":1191,"mtime":1611006156895,"results":"45","hashOfConfig":"42"},{"size":3078,"mtime":1611006156894,"results":"46","hashOfConfig":"42"},{"size":77,"mtime":1611006156899,"results":"47","hashOfConfig":"42"},{"size":207,"mtime":1611006156895,"results":"48","hashOfConfig":"42"},{"size":10066,"mtime":1611006156902,"results":"49","hashOfConfig":"42"},{"size":155,"mtime":1611006156901,"results":"50","hashOfConfig":"42"},{"size":255,"mtime":1611006156899,"results":"51","hashOfConfig":"42"},{"size":6639,"mtime":1611006156900,"results":"52","hashOfConfig":"42"},{"size":1147,"mtime":1611006156898,"results":"53","hashOfConfig":"42"},{"size":3353,"mtime":1611006156901,"results":"54","hashOfConfig":"42"},{"size":1133,"mtime":1611006156898,"results":"55","hashOfConfig":"42"},{"size":14344,"mtime":1611006156899,"results":"56","hashOfConfig":"42"},{"size":8769,"mtime":1611006156898,"results":"57","hashOfConfig":"42"},{"size":8918,"mtime":1611006156897,"results":"58","hashOfConfig":"42"},{"size":2227,"mtime":1611006156900,"results":"59","hashOfConfig":"42"},{"size":14823,"mtime":1611006156898,"results":"60","hashOfConfig":"42"},{"size":2212,"mtime":1611006156900,"results":"61","hashOfConfig":"42"},{"size":2499,"mtime":1611006156900,"results":"62","hashOfConfig":"42"},{"size":605,"mtime":1611282876861,"results":"63","hashOfConfig":"64"},{"size":804,"mtime":1611282876859,"results":"65","hashOfConfig":"64"},{"size":510,"mtime":1611282876860,"results":"66","hashOfConfig":"64"},{"size":1356,"mtime":1611282876860,"results":"67","hashOfConfig":"64"},{"size":941,"mtime":1611282876859,"results":"68","hashOfConfig":"64"},{"size":2415,"mtime":1611282876861,"results":"69","hashOfConfig":"64"},{"size":3078,"mtime":1611006156894,"results":"70","hashOfConfig":"42"},{"size":418,"mtime":1611282876866,"results":"71","hashOfConfig":"64"},{"size":246,"mtime":1611282876857,"results":"72","hashOfConfig":"64"},{"size":590,"mtime":1611282876867,"results":"73","hashOfConfig":"64"},{"size":397,"mtime":1611341012098,"results":"74","hashOfConfig":"64"},{"size":300,"mtime":1611341012101,"results":"75","hashOfConfig":"64"},{"size":478,"mtime":1611282876866,"results":"76","hashOfConfig":"64"},{"size":996,"mtime":1611282876856,"results":"77","hashOfConfig":"64"},{"size":650,"mtime":1611372019363,"results":"78","hashOfConfig":"64"},{"size":283,"mtime":1611365995706,"results":"79","hashOfConfig":"64"},{"size":719,"mtime":1611628361600,"results":"80","hashOfConfig":"64"},{"size":429,"mtime":1611625008379,"results":"81","hashOfConfig":"64"},{"size":948,"mtime":1611628499699,"results":"82","hashOfConfig":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},"1lunfi2",{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"85"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"85"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},"1ae40dn",{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"85"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ckumabs03/projects/tron-common-api-dashboard/src/index.tsx",[],["169","170"],"/Users/ckumabs03/projects/tron-common-api-dashboard/src/reportWebVitals.ts",[],"/Users/ckumabs03/projects/tron-common-api-dashboard/src/App.tsx",["171","172","173"],"import React, { useContext, useEffect, useState } from 'react';\nimport './App.scss';\nimport { PersonControl } from './components/Person/PersonControl';\nimport { UserProvider } from './context/PersonProvider';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Logo from './logo.png'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nfunction App() {\n\n    return (\n        <UserProvider>\n            <Navbar bg=\"dark\" variant=\"dark\">\n                <Navbar.Brand href=\"#home\">\n                <img\n                    alt=\"\"\n                    src={Logo}\n                    height=\"30\"\n                    className=\"d-inline-block align-top mr-4\"\n                />\n                CommonAPI Dashboard\n                </Navbar.Brand>\n            </Navbar>\n            <div className=\"App\">\n                <PersonControl />\n            </div>\n        </UserProvider>\n    );\n}\n\nexport default App;\n","/Users/ckumabs03/projects/tron-common-api-dashboard/src/context/PersonProvider.tsx",["174"],"import React, { useEffect } from 'react';\nimport { Person, PersonControllerApi } from '../openapi/index';\nimport { PersonContext } from './PersonProviderContext';\n\nconst personController = new PersonControllerApi();\nexport function UserProvider({ children } : any) {\n    const [ users, setUsers ] = React.useState<Person[]>([]);\n    \n    useEffect(() => {\n        const initialFetch = async() => setUsers(await personController.getPersons());\n        initialFetch();\n    }, []);\n\n    const addUser = async (person : Person) => {\n        await personController.createPerson({ person });\n        setUsers(await personController.getPersons());\n    }\n\n    const editUser = async (person : Person) => {\n        await personController.updatePerson({ id: person.id as string, person });\n        setUsers(await personController.getPersons());\n    }\n\n    const deleteUser = async (id : string) => {\n        await personController.deletePerson({ id });\n        setUsers(await personController.getPersons());\n    }\n\n    const userMgmtObj = { users, addUser, editUser };  \n    return (\n        <PersonContext.Provider value={userMgmtObj}>\n            {children}\n        </PersonContext.Provider>\n    )\n}","/Users/ckumabs03/projects/tron-common-api-dashboard/src/Components/Person/PersonControl.tsx",["175"],"/Users/ckumabs03/projects/tron-common-api-dashboard/src/openapi/index.ts",[],"/Users/ckumabs03/projects/tron-common-api-dashboard/src/context/PersonProviderContext.tsx",[],"/Users/ckumabs03/projects/tron-common-api-dashboard/src/openapi/runtime.ts",[],"/Users/ckumabs03/projects/tron-common-api-dashboard/src/openapi/models/index.ts",[],"/Users/ckumabs03/projects/tron-common-api-dashboard/src/openapi/apis/index.ts",[],"/Users/ckumabs03/projects/tron-common-api-dashboard/src/openapi/models/Airman.ts",[],"/Users/ckumabs03/projects/tron-common-api-dashboard/src/openapi/apis/PuckboardEtlControllerApi.ts",[],"/Users/ckumabs03/projects/tron-common-api-dashboard/src/openapi/models/SquadronDto.ts",[],"/Users/ckumabs03/projects/tron-common-api-dashboard/src/openapi/apis/HeaderRequestControllerApi.ts",[],"/Users/ckumabs03/projects/tron-common-api-dashboard/src/openapi/apis/SquadronControllerApi.ts",[],"/Users/ckumabs03/projects/tron-common-api-dashboard/src/openapi/apis/PersonControllerApi.ts",[],"/Users/ckumabs03/projects/tron-common-api-dashboard/src/openapi/apis/AirmanControllerApi.ts",[],"/Users/ckumabs03/projects/tron-common-api-dashboard/src/openapi/models/ExceptionResponse.ts",[],"/Users/ckumabs03/projects/tron-common-api-dashboard/src/openapi/apis/OrganizationControllerApi.ts",[],"/Users/ckumabs03/projects/tron-common-api-dashboard/src/openapi/models/Person.ts",[],["176","177"],"/Users/ckumabs03/projects/tron-common-api-dashboard/src/openapi/models/OrganizationDto.ts",[],"/Users/ckumabs03/projects/tron-common-api-dashboard/src/stories/Page.stories.tsx",[],["178","179"],"/Users/ckumabs03/projects/tron-common-api-dashboard/src/stories/Button.stories.tsx",[],"/Users/ckumabs03/projects/tron-common-api-dashboard/src/stories/Header.stories.tsx",[],"/Users/ckumabs03/projects/tron-common-api-dashboard/src/stories/Header.tsx",[],"/Users/ckumabs03/projects/tron-common-api-dashboard/src/stories/Button.tsx",[],"/Users/ckumabs03/projects/tron-common-api-dashboard/src/stories/Page.tsx",[],"/Users/ckumabs03/projects/tron-common-api-dashboard/src/components/Person/PersonControl.tsx",["180"],"import React, { FunctionComponent } from 'react';\nimport { Person } from '../../openapi/index';\nimport { PersonContext } from '../../context/PersonProviderContext';\nimport Table from 'react-bootstrap/Table';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nexport const PersonControl : FunctionComponent = () => {\n\n    var context = React.useContext(PersonContext);\n    const [show, setShow] = React.useState(false);\n\n    const addUser = async () => {\n        try {\n            await context.addUser({email: 'billy@test.com'});\n            console.log(\"Done!\")\n        }\n        catch (e) { console.log(e)}        \n    }\n\n    const handleClose = () => setShow(false);\n    const handleSave = () => setShow(false);\n\n    return (\n        <Container fluid>\n            <Row>\n                <Col className={\"text-left align-self-start\"}>\n                    <Button className={\"my-4\"} variant=\"outline-primary\" onClick={() => setShow(true)}>Add Person</Button>\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                    <Table striped bordered hover size=\"sm\">\n                        <thead>\n                            <tr>\n                                <th>UUID</th>\n                                <th>First</th>\n                                <th>Last</th>\n                                <th>Title</th>\n                                <th>Email</th>\n                                <th>Actions</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {context.users.map( (x: Person) => \n                                <tr key={x.id} data-testid={x.id}>\n                                    <td>{x.id}</td>\n                                    <td>{x.firstName}</td>\n                                    <td>{x.lastName}</td>\n                                    <td>{x.title}</td>\n                                    <td>{x.email}</td>\n                                    <td>\n                                        \n                                    </td>\n                                </tr> )}\n                        </tbody>                \n                    </Table>\n                </Col>\n            </Row>            \n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>New Person</Modal.Title>\n                </Modal.Header>\n                    <Modal.Body>Woohoo, you're reading this text in a modal!\n\n                    </Modal.Body>\n                <Modal.Footer>\n                <Button variant=\"secondary\" onClick={handleClose}>\n                    Close\n                </Button>\n                <Button variant=\"primary\" onClick={handleSave}>\n                    Save\n                </Button>\n                </Modal.Footer>\n            </Modal>\n           \n        </Container>\n    )\n}","/Users/ckumabs03/projects/tron-common-api-dashboard/src/stories/components/PageTitle.stories.tsx",[],"/Users/ckumabs03/projects/tron-common-api-dashboard/src/components/PageTitle/PageTitle.tsx",[],"/Users/ckumabs03/projects/tron-common-api-dashboard/src/stories/icons/IconsList.stories.tsx",[],"/Users/ckumabs03/projects/tron-common-api-dashboard/src/icons/StatusGoodIcon.tsx",[],"/Users/ckumabs03/projects/tron-common-api-dashboard/src/icons/RemoveIcon.tsx",[],"/Users/ckumabs03/projects/tron-common-api-dashboard/src/stories/components/PageFormat.stories.tsx",[],"/Users/ckumabs03/projects/tron-common-api-dashboard/src/components/PageFormat/PageFormat.tsx",[],"/Users/ckumabs03/projects/tron-common-api-dashboard/src/stories/components/Button.stories.tsx",[],"/Users/ckumabs03/projects/tron-common-api-dashboard/src/components/Button/Button.tsx",[],"/Users/ckumabs03/projects/tron-common-api-dashboard/src/stories/components/Grid.stories.tsx",[],"/Users/ckumabs03/projects/tron-common-api-dashboard/src/components/Grid/GridColumn.ts",[],"/Users/ckumabs03/projects/tron-common-api-dashboard/src/components/Grid/Grid.tsx",[],{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","severity":1,"message":"186","line":1,"column":17,"nodeType":"187","messageId":"188","endLine":1,"endColumn":27},{"ruleId":"185","severity":1,"message":"189","line":1,"column":29,"nodeType":"187","messageId":"188","endLine":1,"endColumn":38},{"ruleId":"185","severity":1,"message":"190","line":1,"column":40,"nodeType":"187","messageId":"188","endLine":1,"endColumn":48},{"ruleId":"185","severity":1,"message":"191","line":24,"column":11,"nodeType":"187","messageId":"188","endLine":24,"endColumn":21},{"ruleId":"185","severity":1,"message":"192","line":16,"column":11,"nodeType":"187","messageId":"188","endLine":16,"endColumn":18},{"ruleId":"181","replacedBy":"193"},{"ruleId":"183","replacedBy":"194"},{"ruleId":"181","replacedBy":"195"},{"ruleId":"183","replacedBy":"196"},{"ruleId":"185","severity":1,"message":"192","line":16,"column":11,"nodeType":"187","messageId":"188","endLine":16,"endColumn":18},"no-native-reassign",["197"],"no-negated-in-lhs",["198"],"@typescript-eslint/no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","'deleteUser' is assigned a value but never used.","'addUser' is assigned a value but never used.",["197"],["198"],["197"],["198"],"no-global-assign","no-unsafe-negation"]