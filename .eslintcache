[{"/Users/ckumabs03/projects/tron-common-api-dashboard/src/index.tsx":"1","/Users/ckumabs03/projects/tron-common-api-dashboard/src/reportWebVitals.ts":"2","/Users/ckumabs03/projects/tron-common-api-dashboard/src/App.tsx":"3","/Users/ckumabs03/projects/tron-common-api-dashboard/src/context/PersonProvider.tsx":"4","/Users/ckumabs03/projects/tron-common-api-dashboard/src/Components/Person/PersonControl.tsx":"5","/Users/ckumabs03/projects/tron-common-api-dashboard/src/openapi/index.ts":"6","/Users/ckumabs03/projects/tron-common-api-dashboard/src/context/PersonProviderContext.tsx":"7","/Users/ckumabs03/projects/tron-common-api-dashboard/src/openapi/runtime.ts":"8","/Users/ckumabs03/projects/tron-common-api-dashboard/src/openapi/models/index.ts":"9","/Users/ckumabs03/projects/tron-common-api-dashboard/src/openapi/apis/index.ts":"10","/Users/ckumabs03/projects/tron-common-api-dashboard/src/openapi/models/Airman.ts":"11","/Users/ckumabs03/projects/tron-common-api-dashboard/src/openapi/apis/PuckboardEtlControllerApi.ts":"12","/Users/ckumabs03/projects/tron-common-api-dashboard/src/openapi/models/SquadronDto.ts":"13","/Users/ckumabs03/projects/tron-common-api-dashboard/src/openapi/apis/HeaderRequestControllerApi.ts":"14","/Users/ckumabs03/projects/tron-common-api-dashboard/src/openapi/apis/SquadronControllerApi.ts":"15","/Users/ckumabs03/projects/tron-common-api-dashboard/src/openapi/apis/PersonControllerApi.ts":"16","/Users/ckumabs03/projects/tron-common-api-dashboard/src/openapi/apis/AirmanControllerApi.ts":"17","/Users/ckumabs03/projects/tron-common-api-dashboard/src/openapi/models/ExceptionResponse.ts":"18","/Users/ckumabs03/projects/tron-common-api-dashboard/src/openapi/apis/OrganizationControllerApi.ts":"19","/Users/ckumabs03/projects/tron-common-api-dashboard/src/openapi/models/Person.ts":"20","/Users/ckumabs03/projects/tron-common-api-dashboard/src/openapi/models/OrganizationDto.ts":"21","/Users/ckumabs03/projects/tron-common-api-dashboard/src/stories/Page.stories.tsx":"22","/Users/ckumabs03/projects/tron-common-api-dashboard/src/stories/Button.stories.tsx":"23","/Users/ckumabs03/projects/tron-common-api-dashboard/src/stories/Header.stories.tsx":"24","/Users/ckumabs03/projects/tron-common-api-dashboard/src/stories/Header.tsx":"25","/Users/ckumabs03/projects/tron-common-api-dashboard/src/stories/Button.tsx":"26","/Users/ckumabs03/projects/tron-common-api-dashboard/src/stories/Page.tsx":"27","/Users/ckumabs03/projects/tron-common-api-dashboard/src/components/Person/PersonControl.tsx":"28","/Users/ckumabs03/projects/tron-common-api-dashboard/src/stories/components/PageTitle.stories.tsx":"29","/Users/ckumabs03/projects/tron-common-api-dashboard/src/components/PageTitle/PageTitle.tsx":"30","/Users/ckumabs03/projects/tron-common-api-dashboard/src/stories/icons/IconsList.stories.tsx":"31","/Users/ckumabs03/projects/tron-common-api-dashboard/src/icons/StatusGoodIcon.tsx":"32","/Users/ckumabs03/projects/tron-common-api-dashboard/src/icons/RemoveIcon.tsx":"33"},{"size":500,"mtime":1611006156896,"results":"34","hashOfConfig":"35"},{"size":425,"mtime":1611006156902,"results":"36","hashOfConfig":"35"},{"size":900,"mtime":1611180473808,"results":"37","hashOfConfig":"35"},{"size":1191,"mtime":1611006156895,"results":"38","hashOfConfig":"35"},{"size":3078,"mtime":1611006156894,"results":"39","hashOfConfig":"35"},{"size":77,"mtime":1611006156899,"results":"40","hashOfConfig":"35"},{"size":207,"mtime":1611006156895,"results":"41","hashOfConfig":"35"},{"size":10066,"mtime":1611006156902,"results":"42","hashOfConfig":"35"},{"size":155,"mtime":1611006156901,"results":"43","hashOfConfig":"35"},{"size":255,"mtime":1611006156899,"results":"44","hashOfConfig":"35"},{"size":6639,"mtime":1611006156900,"results":"45","hashOfConfig":"35"},{"size":1147,"mtime":1611006156898,"results":"46","hashOfConfig":"35"},{"size":3353,"mtime":1611006156901,"results":"47","hashOfConfig":"35"},{"size":1133,"mtime":1611006156898,"results":"48","hashOfConfig":"35"},{"size":14344,"mtime":1611006156899,"results":"49","hashOfConfig":"35"},{"size":8769,"mtime":1611006156898,"results":"50","hashOfConfig":"35"},{"size":8918,"mtime":1611006156897,"results":"51","hashOfConfig":"35"},{"size":2227,"mtime":1611006156900,"results":"52","hashOfConfig":"35"},{"size":14823,"mtime":1611006156898,"results":"53","hashOfConfig":"35"},{"size":2212,"mtime":1611006156900,"results":"54","hashOfConfig":"35"},{"size":2499,"mtime":1611006156900,"results":"55","hashOfConfig":"35"},{"size":605,"mtime":1611088500077,"results":"56","hashOfConfig":"35"},{"size":804,"mtime":1611088500075,"results":"57","hashOfConfig":"35"},{"size":510,"mtime":1611088500076,"results":"58","hashOfConfig":"35"},{"size":1356,"mtime":1611088500077,"results":"59","hashOfConfig":"35"},{"size":941,"mtime":1611088500076,"results":"60","hashOfConfig":"35"},{"size":2415,"mtime":1611088500078,"results":"61","hashOfConfig":"35"},{"size":3078,"mtime":1611006156894,"results":"62","hashOfConfig":"35"},{"size":418,"mtime":1611188884087,"results":"63","hashOfConfig":"35"},{"size":246,"mtime":1611190452509,"results":"64","hashOfConfig":"35"},{"size":590,"mtime":1611193015961,"results":"65","hashOfConfig":"35"},{"size":368,"mtime":1611192452295,"results":"66","hashOfConfig":"35"},{"size":276,"mtime":1611192990777,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"1lunfi2",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"70"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"70"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ckumabs03/projects/tron-common-api-dashboard/src/index.tsx",[],["140","141"],"/Users/ckumabs03/projects/tron-common-api-dashboard/src/reportWebVitals.ts",[],"/Users/ckumabs03/projects/tron-common-api-dashboard/src/App.tsx",["142","143","144"],"import React, { useContext, useEffect, useState } from 'react';\nimport './App.scss';\nimport { PersonControl } from './components/Person/PersonControl';\nimport { UserProvider } from './context/PersonProvider';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Logo from './logo.png'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nfunction App() {\n\n    return (\n        <UserProvider>\n            <Navbar bg=\"dark\" variant=\"dark\">\n                <Navbar.Brand href=\"#home\">\n                <img\n                    alt=\"\"\n                    src={Logo}\n                    height=\"30\"\n                    className=\"d-inline-block align-top mr-4\"\n                />\n                CommonAPI Dashboard\n                </Navbar.Brand>\n            </Navbar>\n            <div className=\"App\">\n                <PersonControl />\n            </div>\n        </UserProvider>\n    );\n}\n\nexport default App;\n","/Users/ckumabs03/projects/tron-common-api-dashboard/src/context/PersonProvider.tsx",["145"],"import React, { useEffect } from 'react';\nimport { Person, PersonControllerApi } from '../openapi/index';\nimport { PersonContext } from './PersonProviderContext';\n\nconst personController = new PersonControllerApi();\nexport function UserProvider({ children } : any) {\n    const [ users, setUsers ] = React.useState<Person[]>([]);\n    \n    useEffect(() => {\n        const initialFetch = async() => setUsers(await personController.getPersons());\n        initialFetch();\n    }, []);\n\n    const addUser = async (person : Person) => {\n        await personController.createPerson({ person });\n        setUsers(await personController.getPersons());\n    }\n\n    const editUser = async (person : Person) => {\n        await personController.updatePerson({ id: person.id as string, person });\n        setUsers(await personController.getPersons());\n    }\n\n    const deleteUser = async (id : string) => {\n        await personController.deletePerson({ id });\n        setUsers(await personController.getPersons());\n    }\n\n    const userMgmtObj = { users, addUser, editUser };  \n    return (\n        <PersonContext.Provider value={userMgmtObj}>\n            {children}\n        </PersonContext.Provider>\n    )\n}","/Users/ckumabs03/projects/tron-common-api-dashboard/src/Components/Person/PersonControl.tsx",["146"],"/Users/ckumabs03/projects/tron-common-api-dashboard/src/openapi/index.ts",[],"/Users/ckumabs03/projects/tron-common-api-dashboard/src/context/PersonProviderContext.tsx",[],"/Users/ckumabs03/projects/tron-common-api-dashboard/src/openapi/runtime.ts",[],"/Users/ckumabs03/projects/tron-common-api-dashboard/src/openapi/models/index.ts",[],"/Users/ckumabs03/projects/tron-common-api-dashboard/src/openapi/apis/index.ts",[],"/Users/ckumabs03/projects/tron-common-api-dashboard/src/openapi/models/Airman.ts",[],"/Users/ckumabs03/projects/tron-common-api-dashboard/src/openapi/apis/PuckboardEtlControllerApi.ts",[],"/Users/ckumabs03/projects/tron-common-api-dashboard/src/openapi/models/SquadronDto.ts",[],"/Users/ckumabs03/projects/tron-common-api-dashboard/src/openapi/apis/HeaderRequestControllerApi.ts",[],"/Users/ckumabs03/projects/tron-common-api-dashboard/src/openapi/apis/SquadronControllerApi.ts",[],"/Users/ckumabs03/projects/tron-common-api-dashboard/src/openapi/apis/PersonControllerApi.ts",[],"/Users/ckumabs03/projects/tron-common-api-dashboard/src/openapi/apis/AirmanControllerApi.ts",[],"/Users/ckumabs03/projects/tron-common-api-dashboard/src/openapi/models/ExceptionResponse.ts",[],"/Users/ckumabs03/projects/tron-common-api-dashboard/src/openapi/apis/OrganizationControllerApi.ts",[],"/Users/ckumabs03/projects/tron-common-api-dashboard/src/openapi/models/Person.ts",[],["147","148"],"/Users/ckumabs03/projects/tron-common-api-dashboard/src/openapi/models/OrganizationDto.ts",[],"/Users/ckumabs03/projects/tron-common-api-dashboard/src/stories/Page.stories.tsx",[],["149","150"],"/Users/ckumabs03/projects/tron-common-api-dashboard/src/stories/Button.stories.tsx",[],"/Users/ckumabs03/projects/tron-common-api-dashboard/src/stories/Header.stories.tsx",[],"/Users/ckumabs03/projects/tron-common-api-dashboard/src/stories/Header.tsx",[],"/Users/ckumabs03/projects/tron-common-api-dashboard/src/stories/Button.tsx",[],"/Users/ckumabs03/projects/tron-common-api-dashboard/src/stories/Page.tsx",[],"/Users/ckumabs03/projects/tron-common-api-dashboard/src/components/Person/PersonControl.tsx",["151"],"import React, { FunctionComponent } from 'react';\nimport { Person } from '../../openapi/index';\nimport { PersonContext } from '../../context/PersonProviderContext';\nimport Table from 'react-bootstrap/Table';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nexport const PersonControl : FunctionComponent = () => {\n\n    var context = React.useContext(PersonContext);\n    const [show, setShow] = React.useState(false);\n\n    const addUser = async () => {\n        try {\n            await context.addUser({email: 'billy@test.com'});\n            console.log(\"Done!\")\n        }\n        catch (e) { console.log(e)}        \n    }\n\n    const handleClose = () => setShow(false);\n    const handleSave = () => setShow(false);\n\n    return (\n        <Container fluid>\n            <Row>\n                <Col className={\"text-left align-self-start\"}>\n                    <Button className={\"my-4\"} variant=\"outline-primary\" onClick={() => setShow(true)}>Add Person</Button>\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                    <Table striped bordered hover size=\"sm\">\n                        <thead>\n                            <tr>\n                                <th>UUID</th>\n                                <th>First</th>\n                                <th>Last</th>\n                                <th>Title</th>\n                                <th>Email</th>\n                                <th>Actions</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {context.users.map( (x: Person) => \n                                <tr key={x.id} data-testid={x.id}>\n                                    <td>{x.id}</td>\n                                    <td>{x.firstName}</td>\n                                    <td>{x.lastName}</td>\n                                    <td>{x.title}</td>\n                                    <td>{x.email}</td>\n                                    <td>\n                                        \n                                    </td>\n                                </tr> )}\n                        </tbody>                \n                    </Table>\n                </Col>\n            </Row>            \n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>New Person</Modal.Title>\n                </Modal.Header>\n                    <Modal.Body>Woohoo, you're reading this text in a modal!\n\n                    </Modal.Body>\n                <Modal.Footer>\n                <Button variant=\"secondary\" onClick={handleClose}>\n                    Close\n                </Button>\n                <Button variant=\"primary\" onClick={handleSave}>\n                    Save\n                </Button>\n                </Modal.Footer>\n            </Modal>\n           \n        </Container>\n    )\n}","/Users/ckumabs03/projects/tron-common-api-dashboard/src/stories/components/PageTitle.stories.tsx",[],"/Users/ckumabs03/projects/tron-common-api-dashboard/src/components/PageTitle/PageTitle.tsx",[],"/Users/ckumabs03/projects/tron-common-api-dashboard/src/stories/icons/IconsList.stories.tsx",[],"/Users/ckumabs03/projects/tron-common-api-dashboard/src/icons/StatusGoodIcon.tsx",[],"/Users/ckumabs03/projects/tron-common-api-dashboard/src/icons/RemoveIcon.tsx",[],{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","severity":1,"message":"157","line":1,"column":17,"nodeType":"158","messageId":"159","endLine":1,"endColumn":27},{"ruleId":"156","severity":1,"message":"160","line":1,"column":29,"nodeType":"158","messageId":"159","endLine":1,"endColumn":38},{"ruleId":"156","severity":1,"message":"161","line":1,"column":40,"nodeType":"158","messageId":"159","endLine":1,"endColumn":48},{"ruleId":"156","severity":1,"message":"162","line":24,"column":11,"nodeType":"158","messageId":"159","endLine":24,"endColumn":21},{"ruleId":"156","severity":1,"message":"163","line":16,"column":11,"nodeType":"158","messageId":"159","endLine":16,"endColumn":18},{"ruleId":"152","replacedBy":"164"},{"ruleId":"154","replacedBy":"165"},{"ruleId":"152","replacedBy":"166"},{"ruleId":"154","replacedBy":"167"},{"ruleId":"156","severity":1,"message":"163","line":16,"column":11,"nodeType":"158","messageId":"159","endLine":16,"endColumn":18},"no-native-reassign",["168"],"no-negated-in-lhs",["169"],"@typescript-eslint/no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","'deleteUser' is assigned a value but never used.","'addUser' is assigned a value but never used.",["168"],["169"],["168"],["169"],"no-global-assign","no-unsafe-negation"]