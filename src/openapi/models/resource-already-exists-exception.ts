/* tslint:disable */
/* eslint-disable */
/**
 * TRON Common API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


<<<<<<< HEAD
import { ResourceAlreadyExistsExceptionCause } from './resource-already-exists-exception-cause';
import { ResourceAlreadyExistsExceptionCauseStackTrace } from './resource-already-exists-exception-cause-stack-trace';
import { ResourceAlreadyExistsExceptionCauseSuppressed } from './resource-already-exists-exception-cause-suppressed';
=======
import { RecordNotFoundExceptionCause } from './record-not-found-exception-cause';
import { RecordNotFoundExceptionCauseStackTrace } from './record-not-found-exception-cause-stack-trace';
import { RecordNotFoundExceptionCauseSuppressed } from './record-not-found-exception-cause-suppressed';
>>>>>>> master

/**
 * 
 * @export
 * @interface ResourceAlreadyExistsException
 */
export interface ResourceAlreadyExistsException {
    /**
     * 
<<<<<<< HEAD
     * @type {ResourceAlreadyExistsExceptionCause}
     * @memberof ResourceAlreadyExistsException
     */
    cause?: ResourceAlreadyExistsExceptionCause;
    /**
     * 
     * @type {Array<ResourceAlreadyExistsExceptionCauseStackTrace>}
     * @memberof ResourceAlreadyExistsException
     */
    stackTrace?: Array<ResourceAlreadyExistsExceptionCauseStackTrace>;
=======
     * @type {RecordNotFoundExceptionCause}
     * @memberof ResourceAlreadyExistsException
     */
    cause?: RecordNotFoundExceptionCause;
    /**
     * 
     * @type {Array<RecordNotFoundExceptionCauseStackTrace>}
     * @memberof ResourceAlreadyExistsException
     */
    stackTrace?: Array<RecordNotFoundExceptionCauseStackTrace>;
>>>>>>> master
    /**
     * 
     * @type {string}
     * @memberof ResourceAlreadyExistsException
     */
    message?: string;
    /**
     * 
<<<<<<< HEAD
     * @type {Array<ResourceAlreadyExistsExceptionCauseSuppressed>}
     * @memberof ResourceAlreadyExistsException
     */
    suppressed?: Array<ResourceAlreadyExistsExceptionCauseSuppressed>;
=======
     * @type {Array<RecordNotFoundExceptionCauseSuppressed>}
     * @memberof ResourceAlreadyExistsException
     */
    suppressed?: Array<RecordNotFoundExceptionCauseSuppressed>;
>>>>>>> master
    /**
     * 
     * @type {string}
     * @memberof ResourceAlreadyExistsException
     */
    localizedMessage?: string;
}


